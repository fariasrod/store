{
	"info": {
		"_postman_id": "58db38cc-b709-4756-9202-15a8eb463381",
		"name": "Collection Store Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8410443"
	},
	"item": [
		{
			"name": "WHEN trying to get a price THEN returns a price [200] | case 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"    pm.expect(jsonData.startDate).to.eql(\"2020-06-14T00:00:00\");\r",
							"    pm.expect(jsonData.endDate).to.eql(\"2020-12-31T23:59:59\");\r",
							"    pm.expect(jsonData.curr).to.eql(\"EUR\");\r",
							"    pm.expect(jsonData.price).to.eql(\"35.50\");\r",
							"    pm.expect(jsonData.brandId).to.eql(1);\r",
							"    pm.expect(jsonData.productId).to.eql(35455);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2020-06-14T10:00:00Z\",\r\n    \"brandId\": 1,\r\n    \"productId\": 35455\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/prices",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"prices"
					]
				}
			},
			"response": []
		},
		{
			"name": "WHEN trying to get a price THEN returns a price [200] | case 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(2);\r",
							"    pm.expect(jsonData.startDate).to.eql(\"2020-06-14T15:00:00\");\r",
							"    pm.expect(jsonData.endDate).to.eql(\"2020-06-14T18:30:00\");\r",
							"    pm.expect(jsonData.curr).to.eql(\"EUR\");\r",
							"    pm.expect(jsonData.price).to.eql(\"25.45\");\r",
							"    pm.expect(jsonData.brandId).to.eql(1);\r",
							"    pm.expect(jsonData.productId).to.eql(35455);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2020-06-14T16:00:00Z\",\r\n    \"brandId\": 1,\r\n    \"productId\": 35455\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/prices",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"prices"
					]
				}
			},
			"response": []
		},
		{
			"name": "WHEN trying to get a price THEN returns a price [200] | case 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"    pm.expect(jsonData.startDate).to.eql(\"2020-06-14T00:00:00\");\r",
							"    pm.expect(jsonData.endDate).to.eql(\"2020-12-31T23:59:59\");\r",
							"    pm.expect(jsonData.curr).to.eql(\"EUR\");\r",
							"    pm.expect(jsonData.price).to.eql(\"35.50\");\r",
							"    pm.expect(jsonData.brandId).to.eql(1);\r",
							"    pm.expect(jsonData.productId).to.eql(35455);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2020-06-14T21:00:00Z\",\r\n    \"brandId\": 1,\r\n    \"productId\": 35455\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/prices",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"prices"
					]
				}
			},
			"response": []
		},
		{
			"name": "WHEN trying to get a price THEN returns a price [200] | case 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(3);\r",
							"    pm.expect(jsonData.startDate).to.eql(\"2020-06-15T00:00:00\");\r",
							"    pm.expect(jsonData.endDate).to.eql(\"2020-06-15T11:00:00\");\r",
							"    pm.expect(jsonData.curr).to.eql(\"EUR\");\r",
							"    pm.expect(jsonData.price).to.eql(\"30.50\");\r",
							"    pm.expect(jsonData.brandId).to.eql(1);\r",
							"    pm.expect(jsonData.productId).to.eql(35455);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2020-06-15T10:00:00Z\",\r\n    \"brandId\": 1,\r\n    \"productId\": 35455\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/prices",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"prices"
					]
				}
			},
			"response": []
		},
		{
			"name": "WHEN trying to get a price THEN returns a price [200] | case 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(4);\r",
							"    pm.expect(jsonData.startDate).to.eql(\"2020-06-15T16:00:00\");\r",
							"    pm.expect(jsonData.endDate).to.eql(\"2020-12-31T23:59:59\");\r",
							"    pm.expect(jsonData.curr).to.eql(\"EUR\");\r",
							"    pm.expect(jsonData.price).to.eql(\"38.95\");\r",
							"    pm.expect(jsonData.brandId).to.eql(1);\r",
							"    pm.expect(jsonData.productId).to.eql(35455);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2020-06-16T21:00:00Z\",\r\n    \"brandId\": 1,\r\n    \"productId\": 35455\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/prices",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"prices"
					]
				}
			},
			"response": []
		},
		{
			"name": "WHEN trying to get a price for a date in which there are no prices THEN returns [204]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2030-06-16T21:00:00Z\",\r\n    \"brandId\": 1,\r\n    \"productId\": 35455\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/prices",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"prices"
					]
				}
			},
			"response": []
		},
		{
			"name": "WHEN trying to get a price with a null brandId THEN returns [400]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.brandId).to.eql(\"must not be null\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2030-06-16T21:00:00Z\",\r\n    \"productId\": 35455\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/prices",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"prices"
					]
				}
			},
			"response": []
		},
		{
			"name": "WHEN trying to get a price with a no-existent brand THEN returns [404]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(404);\r",
							"    pm.expect(jsonData.error).to.eql(\"Not Found\");\r",
							"    pm.expect(jsonData.message).to.eql(\"Brand { 100 } not found.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2020-06-14T10:00:00Z\",\r\n    \"brandId\": 100,\r\n    \"productId\": 35455\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/prices",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"prices"
					]
				}
			},
			"response": []
		},
		{
			"name": "WHEN trying to get a price with a no-existent product THEN returns [404]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(404);\r",
							"    pm.expect(jsonData.error).to.eql(\"Not Found\");\r",
							"    pm.expect(jsonData.message).to.eql(\"Product { 100 } not found.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2020-06-14T10:00:00Z\",\r\n    \"brandId\": 1,\r\n    \"productId\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/prices",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"prices"
					]
				}
			},
			"response": []
		},
		{
			"name": "WHEN trying to get a price with a null productId THEN returns [400]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.productId).to.eql(\"must not be null\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2020-06-14T10:00:00Z\",\r\n    \"brandId\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/prices",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"prices"
					]
				}
			},
			"response": []
		},
		{
			"name": "WHEN trying to get a price with a null date THEN returns [400]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.date).to.eql(\"must not be null\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"brandId\": 1,\r\n    \"productId\": 35455\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/prices",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"prices"
					]
				}
			},
			"response": []
		}
	]
}